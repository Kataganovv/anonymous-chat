#!/bin/bash

# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Ç—É–Ω–Ω–µ–ª—è —Å QR-–∫–æ–¥–æ–º
# –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ç—É–Ω–Ω–µ–ª–∏ –±–µ–∑ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ü–û

PORT=8000
CHAT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo "üåç –°–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–Ω–æ–Ω–∏–º–Ω–æ–º—É —á–∞—Ç—É..."
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –ø–æ–¥–¥–æ–º–µ–Ω–∞
generate_subdomain() {
    echo "chat-$(date +%s | tail -c 6)"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
check_local_server() {
    if curl -s http://localhost:$PORT > /dev/null 2>&1; then
        echo "‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω"
        return 0
    else
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."
        cd "$CHAT_DIR"
        python3 -m http.server $PORT --bind 0.0.0.0 > /dev/null 2>&1 &
        SERVER_PID=$!
        sleep 3
        return 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è —á–µ—Ä–µ–∑ localhost.run
create_localhost_run_tunnel() {
    echo "üîó –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è —á–µ—Ä–µ–∑ localhost.run..."
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å –≤ —Ñ–æ–Ω–µ –∏ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –≤—ã–≤–æ–¥
    ssh -o StrictHostKeyChecking=no -R 80:localhost:$PORT localhost.run 2>&1 | while IFS= read -r line; do
        echo "$line"
        # –ò—â–µ–º URL –≤ –≤—ã–≤–æ–¥–µ
        if [[ $line == *"tunneled with tls termination"* ]] && [[ $line == *"https://"* ]]; then
            PUBLIC_URL=$(echo "$line" | grep -oE 'https://[^[:space:]]+')
            echo "$PUBLIC_URL" > /tmp/tunnel_url.txt
            echo ""
            echo "üéâ –¢—É–Ω–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
            echo "üîó –ü—É–±–ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞: $PUBLIC_URL"
            echo ""
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ –≤ ASCII
            if command -v qrencode >/dev/null 2>&1; then
                echo "üì± QR-–∫–æ–¥:"
                qrencode -t ANSI "$PUBLIC_URL"
            else
                echo "üì± –î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ QR-–∫–æ–¥–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ qrencode:"
                echo "   brew install qrencode"
            fi
            
            echo ""
            echo "üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º:"
            echo "   $PUBLIC_URL"
            echo ""
            
            break
        fi
    done &
    
    TUNNEL_PID=$!
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è —á–µ—Ä–µ–∑ serveo.net
create_serveo_tunnel() {
    echo "üîó –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è —á–µ—Ä–µ–∑ serveo.net..."
    
    SUBDOMAIN=$(generate_subdomain)
    PUBLIC_URL="https://$SUBDOMAIN.serveo.net"
    
    echo "üåê –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å: $PUBLIC_URL"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç—É–Ω–Ω–µ–ª—å
    ssh -o StrictHostKeyChecking=no -R $SUBDOMAIN:80:localhost:$PORT serveo.net > /dev/null 2>&1 &
    TUNNEL_PID=$!
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    sleep 5
    
    if curl -s "$PUBLIC_URL" > /dev/null 2>&1; then
        echo "$PUBLIC_URL" > /tmp/tunnel_url.txt
        echo ""
        echo "üéâ –¢—É–Ω–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
        echo "üîó –ü—É–±–ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞: $PUBLIC_URL"
        echo ""
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥ –≤ ASCII
        if command -v qrencode >/dev/null 2>&1; then
            echo "üì± QR-–∫–æ–¥:"
            qrencode -t ANSI "$PUBLIC_URL"
        fi
        
        echo ""
        echo "üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º:"
        echo "   $PUBLIC_URL"
        echo ""
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å —á–µ—Ä–µ–∑ serveo.net"
        return 1
    fi
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç—É–Ω–Ω–µ–ª—è –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
create_simple_tunnel() {
    echo "üîó –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ç—É–Ω–Ω–µ–ª—è..."
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º ngrok –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—É - bore
    if ! command -v bore >/dev/null 2>&1; then
        echo "üì• –°–∫–∞—á–∏–≤–∞—é bore (–ø—Ä–æ—Å—Ç–∞—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ ngrok)..."
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É
        if [[ "$OSTYPE" == "darwin"* ]]; then
            if [[ $(uname -m) == "arm64" ]]; then
                BORE_URL="https://github.com/ekzhang/bore/releases/latest/download/bore-v0.5.0-aarch64-apple-darwin.tar.gz"
            else
                BORE_URL="https://github.com/ekzhang/bore/releases/latest/download/bore-v0.5.0-x86_64-apple-darwin.tar.gz"
            fi
        else
            BORE_URL="https://github.com/ekzhang/bore/releases/latest/download/bore-v0.5.0-x86_64-unknown-linux-musl.tar.gz"
        fi
        
        curl -L "$BORE_URL" | tar xz > /dev/null 2>&1
        chmod +x bore
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º bore —Ç—É–Ω–Ω–µ–ª—å
    if [ -f "./bore" ] || command -v bore >/dev/null 2>&1; then
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é bore —Ç—É–Ω–Ω–µ–ª—å..."
        
        BORE_CMD="bore"
        if [ -f "./bore" ]; then
            BORE_CMD="./bore"
        fi
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º bore –∏ –ø–æ–ª—É—á–∞–µ–º URL
        $BORE_CMD local $PORT --to bore.pub > /tmp/bore_output.txt 2>&1 &
        TUNNEL_PID=$!
        
        sleep 3
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º URL –∏–∑ –≤—ã–≤–æ–¥–∞
        if [ -f "/tmp/bore_output.txt" ]; then
            PUBLIC_URL=$(grep -o 'http://[^[:space:]]*' /tmp/bore_output.txt | head -1)
            if [ ! -z "$PUBLIC_URL" ]; then
                echo "$PUBLIC_URL" > /tmp/tunnel_url.txt
                echo ""
                echo "üéâ –¢—É–Ω–Ω–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
                echo "üîó –ü—É–±–ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞: $PUBLIC_URL"
                echo ""
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
                if command -v qrencode >/dev/null 2>&1; then
                    echo "üì± QR-–∫–æ–¥:"
                    qrencode -t ANSI "$PUBLIC_URL"
                fi
                
                echo ""
                echo "üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —ç—Ç—É —Å—Å—ã–ª–∫—É –¥—Ä—É–∑—å—è–º:"
                echo "   $PUBLIC_URL"
                echo ""
            fi
        fi
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å bore"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
cleanup() {
    echo ""
    echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Å–µ—Ä–≤–∏—Å—ã..."
    
    if [ ! -z "$SERVER_PID" ]; then
        kill $SERVER_PID 2>/dev/null
    fi
    
    if [ ! -z "$TUNNEL_PID" ]; then
        kill $TUNNEL_PID 2>/dev/null
    fi
    
    # –û—á–∏—â–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    rm -f /tmp/tunnel_url.txt /tmp/bore_output.txt
    
    echo "‚úÖ –ì–æ—Ç–æ–≤–æ!"
    exit 0
}

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤
trap cleanup INT TERM

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Å–æ–∑–¥–∞–Ω–∏—è –ø—É–±–ª–∏—á–Ω–æ–≥–æ —Ç—É–Ω–Ω–µ–ª—è:"
echo "   1. localhost.run (SSH —Ç—É–Ω–Ω–µ–ª—å)"
echo "   2. serveo.net (SSH —Ç—É–Ω–Ω–µ–ª—å —Å –ø–æ–¥–¥–æ–º–µ–Ω–æ–º)"
echo "   3. bore.pub (–ø—Ä–æ—Å—Ç–æ–π HTTP —Ç—É–Ω–Ω–µ–ª—å)"
echo ""

read -p "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç (1-3) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞: " choice

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
check_local_server

case $choice in
    1)
        create_localhost_run_tunnel
        ;;
    2)
        create_serveo_tunnel
        ;;
    3)
        create_simple_tunnel
        ;;
    *)
        echo "ü§ñ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –≤—ã–±–æ—Ä –ª—É—á—à–µ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞..."
        
        # –ü—Ä–æ–±—É–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ –ø–æ—Ä—è–¥–∫—É
        if create_simple_tunnel; then
            echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è bore.pub"
        elif create_serveo_tunnel; then
            echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è serveo.net"
        elif create_localhost_run_tunnel; then
            echo "‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è localhost.run"
        else
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å"
            echo ""
            echo "üîß –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é:"
            echo "   ssh -R 80:localhost:$PORT localhost.run"
            echo "   –∏–ª–∏"
            echo "   ssh -R 80:localhost:$PORT serveo.net"
            exit 1
        fi
        ;;
esac

echo ""
echo "üéØ –¢—É–Ω–Ω–µ–ª—å –∞–∫—Ç–∏–≤–µ–Ω! –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏..."
echo ""

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π
echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π:"
tail -f /dev/null